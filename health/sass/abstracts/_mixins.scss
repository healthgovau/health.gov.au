@mixin opacity( $opacity ) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}


/**
 * Create media queries and wraps the @content code inside of it
 *
 * @param  {keywords} $breakpoint - Either one of the following keywords: xs, sm, md, lg
 *
 * @return {string}               - The code passed in via @content wrapped inside a media query
 */
@mixin media-max( $breakpoint ) {
  @if type-of( $breakpoint ) != 'string' {
    @error "Captain I’m giving it all she’s got but; the uikit-media mixin only takes a string!";
  }

  @if $breakpoint != 'xs' and $breakpoint != 'sm' and $breakpoint != 'md' and $breakpoint != 'lg' {
    @error "There’s no crying in baseball; the uikit-media mixin only takes the following breakpoint strings: xs, sm, md, lg";
  }

  @if( $breakpoint == "xs" ) {
    @media (max-width: $uikit-media-xs) {
      @content;
    }
  }

  @if( $breakpoint == "sm" ) {
    @media (max-width: $uikit-media-sm) {
      @content;
    }
  }

  @if( $breakpoint == "md" ) {
    @media (max-width: $uikit-media-md) {
      @content;
    }
  }

  @if( $breakpoint == "lg" ) {
    @media (max-width: $uikit-media-lg) {
      @content;
    }
  }
}

@mixin link-pullout($border-width: 6px, $border-color: $colour-Secondary-darker, $pad: 20px){
  border-left: $border-width solid $border-color;
  padding-left: $pad;
  padding-top: uikit-space(.5);
}

@mixin shadowfy($colour: $colour-Shadow){
  box-shadow: 0px 3px 10px $colour;
}

// UI-Kit link style
%link {
  border-bottom: 1px solid $colour-Secondary;
  &:hover {
    border: none;
  }
}

// Mixin to apply row and container
@mixin row-and-container {
  // Contain content (required)
  &.inside-para-container {
    @extend .container;

    // Add row (required)
    > .para-row {
      @extend .row;
    }
  }
}

// Mixin to apply colours to card.
@mixin card-colour($colour: $colour-Secondary, $colour-hover: $colour-Secondary-hover) {
  background: $colour;

  &:hover {
    background: $colour-hover;

  }
}

// Mixin to apply card (border top colour) style to bean blocks.
@mixin block-card($border-colour-top: $colour-Tertiary-2, $border-hover-colour: $colour-Tertiary-2-hover, $bg-colour: $colour-lightest, $bg-hover-colour: $colour-light-dark) {
  a {
    padding: uikit-space(.5);
    @include uikit-media(md) {
      padding: uikit-space(1);
    }
    border-bottom: none;
    display: block;
    overflow: hidden;
    background: $bg-colour;
    border-top: 10px solid $border-colour-top;

    // Move external link icon to title not whole <a>
    &:after {
      display: none;
    }


    .field-name-field-image {
      svg {
        path, rect {
          fill: #000;
        }
      }
    }

    .field-name-field-bean-text {
      color: $uikit-colour-Secondary;
    }

    &:hover,
    &:focus {
      background: $bg-hover-colour;
      border-top-color: $border-hover-colour;
      .field-name-field-link-internal {
        //color: #fff;
        .field-item {
          border-bottom: none;
        }
      }
    }

    .field-name-field-link-internal {
      .field-item {
        display: inline;
        border-bottom: 1px solid $uikit-colour-Link;
        font-weight: 700;
        margin-bottom: 0;
        font-family: $uikit-font-system;
      }
    }
    &[rel~='external'] {
      .field-name-field-link-internal {
        .field-item:after {
          @extend %ext-link;
        }
      }
    }
  }
}

// Mixin to apply responsive styles to SVGs in bean blocks.
@mixin block-text-image-svg($icon-size: '') {
  
  @if $icon-size == 'large' {
    svg {
      max-width: 65%;
      // IE doesn't handle max-width scaling correctly, so we have to specify width and height in px
      max-width: 75px;
      max-height: 75px;
      // @include uikit-media(sm) {
      //   max-width: 75px;
      //   max-height: 75px;
      // }
      @include uikit-media(md) {
        max-width: 105px;
        max-height: 105px;
      }
    }
  } @else {
    svg {
      max-width: 35%;
      // IE doesn't handle max-width scaling correctly, so we have to specify width and height in px
      max-width: 30px;
      max-height: 30px;
      // @include uikit-media(sm) {
      //   max-width: 30px;
      //   max-height: 30px;
      // }
      @include uikit-media(md) {
        max-width: 40px;
        max-height: 40px;
      }
    }
  }
  
}
