@mixin icon($icon, $size) {
  font-size: $size;
  content: $icon;
}

.icon {
  &--block {
    display: block;
  }
}

// Font Awesome pseudo-class implementation
// Usage: apply class='fa-iconname' (reference Font Awesome class names)
// Optional class='icon-dark', 'icon-light' for colouring (default is grey)
// Optional class='icon-large'
// Note: it cannot be applied to absolutely positioned elements

// Example application
// element {
//  @extend %baseicon;
//  &:before {
//    content: "\f16a";
//  }
// }

%baseicon {
  position: relative;
  margin-left: 2em;
  &:before {
    font-family: FontAwesome;
    font-style: normal;
    font-weight: normal;
    text-decoration: none;
    color: inherit;
    font-size: 1.5em;
    //position: absolute;
    line-height: 1;
    left: 0;
    margin-left: -1.325em;
    display: inline-block;
  }
}

// Default style (with generic sizing)
[class*="fa-"] {
  @extend %baseicon;
}


// Size variants
.fa-large {
  padding-left: 3.5em; // Revisit
  &:before {
    font-size: 2.5em;
  }
}

.fa-small {
  margin-left: 1.6em;
  &:before {
    font-size: 1em;
  }
}

// If applied to typography, size according to element
h1, h2, h3, h4, h5, h6, p {
  &[class*="fa-"] {
    &:before {
      font-size: inherit;
    }
  }
}

// Colours
.fa-dark {
  &:before {
    color: #000;
  }
}

.fa-light {
  &:before {
    color: #FFF;
  }
}

.close-toggle {
  text-indent: -999px;
  width: 25px;
  height: 25px;
  display: block;
  overflow: hidden;
  background: AU-svguri('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path fill="#{ $AU-color-foreground-text }" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
    <path fill="none" d="M0 0h24v24H0z"/>
  </svg>');
}

.fa-phone {
  margin-left: 1em;
  margin-right: 0.25em;
  &:before {
    margin-left: -1em;
  }
}
